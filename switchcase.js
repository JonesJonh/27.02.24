// a linha abaixo define uma constante chamada "sortear" que armazena uma fun√ß√£o "let nomes".
const sortear=() => { 

    // a linha abaixo armazena um array de strings
    let nomes = ["ROBESVALDO üëç","PINK FLOIDüé∏","MACARENAüíÉüèª","MICHAEL JACKSONüï¥","WINKS üßö‚Äç‚ôÄÔ∏è","PATRULHA CANINA üê∂","BARBIEüë∏","KEN üë±üèª‚Äç‚ôÇÔ∏è","MONSTER HIGH üßü‚Äç‚ôÄÔ∏è"];
    
    // a linha abaixo atribui o elemento HTML com o ID "nome" a uma variavel chamada "h1Nome"
    let h1Nome = document.getElementById("nome");
    
    // a linha abaixo significa que uma v√°riavel chamada 'achouNumero' est√° sendo declarada e inicializada com o valor 'false'.
    let achouNumero = false;

    // a linha abaixo significa que uma variavel chamada 'numeroSorteado' est√° sendo declarada utilizando a palavra-chave 'let'
    let numeroSorteado;
    
    // a linha abaixo significa que o c√≥digo dentro do loop ser√° repetido enquanto a variavel 'achouNumero' for 'false'
    while(achouNumero == false) {

        // a linha abaixo gera um n√∫mero inteiro aleat√≥rio entre 0 e 99.
        numeroSorteado = Math.floor(Math.random() * 100);

        //a linha abaixo verifica se o valor armazenado em 'numeroSorteado' √© menor que o n√∫mero de elementos array 'nomes'
        if (numeroSorteado < nomes.length) {

            //a linha abaixo significa que a vari√°vel "achouNumero" est√° atribuida a um valor booleano "true". 
            achouNumero = true;
        }
    }

    // a linha abaixo inicia uma estrutura de controle chamada 'switch' no qual o 'numeroSorteado' √© a express√£o que ser√° avaliada.
    switch (numeroSorteado) {
       
    // a linha abaixo √© usada como estrutura de controle switch para executar um bloco de c√≥digo especifico
     case 0:

        // a linha abaixo atribui o texto de um elemento HTML <h1> chamado h1Nome para ser localizado em uma posi√ß√£o especifica de array     
        h1Nome.innerText = nomes[numeroSorteado];

        // a linha abaixo √© usada para interromper imedidatamente a execu√ß√£o de um loop ou estrutura de sele√ß√£o
        break;

    // a linha abaixo √© usada como estrutura de controle switch para executar um bloco de c√≥digo especifico    
    case 1:

        // a linha abaixo atribui o texto de um elemento HTML <h1> chamado h1Nome para ser localizado em uma posi√ß√£o especifica de array  
        h1Nome.innerText = nomes[numeroSorteado];

        // a linha abaixo √© usada para interromper imedidatamente a execu√ß√£o de um loop ou estrutura de sele√ß√£o
        break;

    // a linha abaixo √© usada como estrutura de controle switch para executar um bloco de c√≥digo especifico
    case 2:

        // a linha abaixo atribui o texto de um elemento HTML <h1> chamado h1Nome para ser localizado em uma posi√ß√£o especifica de array 
        h1Nome.innerText = nomes[numeroSorteado];

        // a linha abaixo √© usada para interromper imedidatamente a execu√ß√£o de um loop ou estrutura de sele√ß√£o
        break;

    // a linha abaixo √© usada como estrutura de controle switch para executar um bloco de c√≥digo especifico
    case 3:

        // a linha abaixo atribui o texto de um elemento HTML <h1> chamado h1Nome para ser localizado em uma posi√ß√£o especifica de array    
        h1Nome.innerText = nomes[numeroSorteado];

        // a linha abaixo √© usada para interromper imedidatamente a execu√ß√£o de um loop ou estrutura de sele√ß√£o
        break;

    // a linha abaixo √© usada como estrutura de controle switch para executar um bloco de c√≥digo especifico
    case 4:

        // a linha abaixo atribui o texto de um elemento HTML <h1> chamado h1Nome para ser localizado em uma posi√ß√£o especifica de array 
        h1Nome.innerText = nomes[numeroSorteado];

        // a linha abaixo √© usada para interromper imedidatamente a execu√ß√£o de um loop ou estrutura de sele√ß√£o
        break;

    // a linha abaixo √© usada como estrutura de controle switch para executar um bloco de c√≥digo especifico 
    case 5:

        // a linha abaixo atribui o texto de um elemento HTML <h1> chamado h1Nome para ser localizado em uma posi√ß√£o especifica de array 
        h1Nome.innerText = nomes[numeroSorteado];

        // a linha abaixo √© usada para interromper imedidatamente a execu√ß√£o de um loop ou estrutura de sele√ß√£o
        break;

    // a linha abaixo √© usada como estrutura de controle switch para executar um bloco de c√≥digo especifico
    case 6:

        // a linha abaixo atribui o texto de um elemento HTML <h1> chamado h1Nome para ser localizado em uma posi√ß√£o especifica de array 
        h1Nome.innerText = nomes[numeroSorteado];

        // a linha abaixo √© usada para interromper imedidatamente a execu√ß√£o de um loop ou estrutura de sele√ß√£o
        break;

    // a linha abaixo √© usada como estrutura de controle switch para executar um bloco de c√≥digo especifico
    case 7:

        // a linha abaixo atribui o texto de um elemento HTML <h1> chamado h1Nome para ser localizado em uma posi√ß√£o especifica de array 
        h1Nome.innerText = nomes[numeroSorteado];

        // a linha abaixo √© usada para interromper imedidatamente a execu√ß√£o de um loop ou estrutura de sele√ß√£o
        break;

    // a linha abaixo √© usada como estrutura de controle switch para executar um bloco de c√≥digo especifico
    case 8:

        // a linha abaixo atribui o texto de um elemento HTML <h1> chamado h1Nome para ser localizado em uma posi√ß√£o especifica de array 
        h1Nome.innerText = nomes[numeroSorteado];

        // a linha abaixo √© usada para interromper imedidatamente a execu√ß√£o de um loop ou estrutura de sele√ß√£o
        break;

        // a linha abaixo √© executada quando nenhuma das condi√ß√µes anteriores √© antendida.
        default:
        }
}